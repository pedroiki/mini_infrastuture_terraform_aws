# Define as variáveis
variable "aws_access_key" {}
variable "aws_secret_key" {}
variable "region" {
  default = "us-east-1"  # Substitua pela região desejada
}
variable "vpc_cidr_block" {
  default = "10.0.0.0/16"
}

# Configura as credenciais da AWS
provider "aws" {
  access_key = var.aws_access_key
  secret_key = var.aws_secret_key
  region     = var.region
}

# Cria a VPC
resource "aws_vpc" "main" {
  cidr_block = var.vpc_cidr_block
}

# Cria os subnets
resource "aws_subnet" "subnet1" {
  vpc_id     = aws_vpc.main.id
  cidr_block = "10.0.1.0/24"
}

resource "aws_subnet" "subnet2" {
  vpc_id     = aws_vpc.main.id
  cidr_block = "10.0.2.0/24"
}

# Cria instâncias EC2
resource "aws_instance" "hostname1" {
  ami           = "ami-12345678"  # Substitua pelo ID da AMI desejada
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.subnet1.id

  tags = {
    Name = "hostname1"
  }
}

resource "aws_instance" "hostname2" {
  ami           = "ami-12345678"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.subnet2.id

  tags = {
    Name = "hostname2"
  }
}

resource "aws_instance" "hostname3" {
  ami           = "ami-12345678"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.subnet2.id

  tags = {
    Name = "hostname3"
  }
}

# Cria usuários IAM
resource "aws_iam_user" "pedro" {
  name = "pedro"
}

resource "aws_iam_user" "joao" {
  name = "joao"
}

resource "aws_iam_user" "maria" {
  name = "maria"
}

# Instala o Docker nas instâncias
resource "aws_instance_user_data" "docker_install" {
  count = length(aws_instance.hostname1)

  instance_id = aws_instance.hostname1[count.index].id

  user_data = <<-EOT
              #!/bin/bash
              yum update -y
              yum install -y docker
              service docker start
              EOT
}
